{"version":3,"file":"button-element.js","sourceRoot":"","sources":["../../src/components/forms/button-element.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAG1D,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,UAAU;IAAtC;;QAiBE,SAAI,GAAG,QAAQ,CAAC;IAKlB,CAAC;IAHU,MAAM;QACb,OAAO,IAAI,CAAA,uBAAuB,IAAI,CAAC,IAAI,WAAW,CAAC;IACzD,CAAC;;AApBe,oBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;GAa3B,AAbqB,CAapB;AAGF;IADC,QAAQ,EAAE;2CACK;AAjBZ,aAAa;IADlB,aAAa,CAAC,gBAAgB,CAAC;GAC1B,aAAa,CAsBlB","sourcesContent":["import {LitElement, html, css} from 'lit';\r\nimport {customElement, property} from 'lit/decorators.js';\r\n\r\n@customElement('button-element')\r\nclass ButtonElement extends LitElement {\r\n  static override styles = css`\r\n    .btn {\r\n      padding: 8px 16px;\r\n      border-radius: 4px;\r\n      color: black;\r\n      display: block;\r\n      background: white;\r\n      font-size: 14px;\r\n      font-weight: 500;\r\n      outline: none;\r\n      border: none;\r\n      cursor: pointer;\r\n    }\r\n  `;\r\n\r\n  @property()\r\n  name = 'Create';\r\n\r\n  override render() {\r\n    return html`<button class=\"btn\">${this.name}</button>`;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'button-element': ButtonElement;\r\n  }\r\n}\r\n"]}